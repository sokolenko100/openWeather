{
    "compilerOptions": {
        /* Basic Options */
        "target": "esnext" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */,
        "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
        "lib": ["es6"] /* Specify library files to be included in the compilation. */,
        "allowJs": true /* Allow javascript files to be compiled. */,
        "jsx": "react-native" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
        "noEmit": true /* Do not emit outputs. */,
        "isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,

        "strict": false /* Enable all strict type-checking options. */,
        "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
        "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
        "skipLibCheck": true,
        "resolveJsonModule": true,
        "baseUrl": "./",
        "rootDirs": ["./src"],
        "paths": {
            "@assets/*": ["./src/assets/*"],
            "@components/*": ["./src/components/*"],
            "@constants/*": ["./src/constants/*"],
            "@helpers/*": ["./src/helpers/*"],
            "@interfaces/*": ["./src/interfaces/*"],
            "@navigation/*": ["./src/navigation/*"],
            "@screens/*": ["./src/screens/*"],
            "@store/*": ["./src/store/*"],
            "@test-mocks/*": ["./__mocks__/*"]
        }
    },
    "include": ["./src/**/*", "__tests__", "__mocks__", ".eslintrc.js", "declarations.d.ts"],
    "exclude": ["node_modules", "babel.config.js", "metro.config.js"]
}
